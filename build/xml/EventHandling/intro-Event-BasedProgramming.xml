<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.19 -->
<document source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/EventHandling/intro-Event-BasedProgramming.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <substitution_definition names="blank"><BlankNode></BlankNode></substitution_definition>
    <substitution_definition names="docname"><reference refuri="intro-Event-BasedProgramming-source.html">intro-Event-BasedProgramming</reference></substitution_definition>
    <comment xml:space="preserve">Copyright (C)  Celine Latulipe.  Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free Documentation
License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being Forward, Prefaces, and
Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled "GNU Free Documentation
License".</comment>
    <section ids="event-based-programming" names="event-based\ programming">
        <title>Event-Based Programming</title>
        <paragraph>Throughout this book, we have seen tidbits of interactive programming: using the input() statement to get information from the user, and using turtles to draw output in a window for an end user to view. We have even done a little bit of event-based programming by making use of the mouse and keyboard listeneers that are available in the turtle module. In this chapter, we formally introduce the idea of event-based programming, which is the most common way to structure interactive programs. The purpose of this chapter is to help you to understand this structure, which underlies many of the software systems, mobile apps, video games, and other digital systems you use daily. This is a huge topic, and there are entire books and courses about how to do event-based programming and how to design user interfaces for such programs. This chapter gives you a high level overview and a chance to briefly try out these concepts.</paragraph>
        <section ids="topics" names="topics">
            <title>Topics</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Understand what event-based programming is, and how it differs from other types of programs</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Understand that a GUI designed by the programmer is the visual representation that a user interacts with</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Understand that a programmer writes event handlers that are functions that get executed when a user interacts with the interface</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Understand that after a GUI is built and the event handlers are written, the event handlers have to be connected to the GUI objects</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="learning-objectives" names="learning\ objectives">
            <title>Learning Objectives</title>
            <paragraph>At the end of this chapter, you should be able to use the Python simpleGUI module in CodeSkulptr to:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Create a simple graphical user interface</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Write event handling functions to react to end user actions</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Register event handler functions for the operating system to listen for</paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>

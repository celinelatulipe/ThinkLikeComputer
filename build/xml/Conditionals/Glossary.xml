<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.19 -->
<document source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/Conditionals/Glossary.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <substitution_definition names="blank"><BlankNode></BlankNode></substitution_definition>
    <substitution_definition names="docname"><reference refuri="Glossary-source.html">Glossary</reference></substitution_definition>
    <comment xml:space="preserve">Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free Documentation
License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being Forward, Prefaces, and
Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled "GNU Free Documentation
License".</comment>
    <section ids="glossary" names="glossary">
        <title>Glossary</title>
        <glossary sorted="False">
            <definition_list classes="glossary">
                <definition_list_item>
                    <term ids="term-block">block<index entries="['single',\ 'block',\ 'term-block',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A group of consecutive statements with the same indentation.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-body">body<index entries="['single',\ 'body',\ 'term-body',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>The block of statements in a compound statement that follows the
                            header.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-boolean-values">boolean values<index entries="['single',\ 'boolean\ values',\ 'term-boolean-values',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A value that is either True or False. True and False must be capitalized to be considered Boolean.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-branch">branch<index entries="['single',\ 'branch',\ 'term-branch',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>One of the possible paths of the flow of execution determined by
                            conditional execution.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-chained-conditional">chained conditional<index entries="['single',\ 'chained\ conditional',\ 'term-chained-conditional',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A conditional branch with more than two possible flows of execution. In
                            Python chained conditionals are written with <literal>if ... elif ... else</literal>
                            statements.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-comparison-operator">comparison operator<index entries="['single',\ 'comparison\ operator',\ 'term-comparison-operator',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>One of the operators that compares two values: <literal>==</literal>, <literal>!=</literal>, <literal>&gt;</literal>,
                            <literal>&lt;</literal>, <literal>&gt;=</literal>, and <literal>&lt;=</literal>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-condition">condition<index entries="['single',\ 'condition',\ 'term-condition',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>The boolean expression in a conditional statement that determines which
                            branch is executed.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-conditional-statement">conditional statement<index entries="['single',\ 'conditional\ statement',\ 'term-conditional-statement',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A statement that controls the flow of execution depending on some
                            condition. In Python the keywords <literal>if</literal>, <literal>elif</literal>, and <literal>else</literal> are
                            used for conditional statements.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-logical-operators">logical operators<index entries="['single',\ 'logical\ operators',\ 'term-logical-operators',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>“and”, “or” and “not” are logical operators used to evaluate expressions. Their semantic meaning is similar to their English meaning.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-nesting">nesting<index entries="['single',\ 'nesting',\ 'term-nesting',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>One program structure within another, such as a conditional statement
                            inside a branch of another conditional statement.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-unary-selection">unary selection<index entries="['single',\ 'unary\ selection',\ 'term-unary-selection',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A selection statement in which there is only an “if” statement and the “else” statement is omitted entirely. In an unary selection, the statements are only executed if the condition evaluates to true, otherwise the program continues to the body following the if statement.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
        </glossary>
    </section>
</document>

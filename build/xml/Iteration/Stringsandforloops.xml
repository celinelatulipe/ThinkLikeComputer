<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.19 -->
<document source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/Iteration/Stringsandforloops.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <substitution_definition names="blank"><BlankNode></BlankNode></substitution_definition>
    <substitution_definition names="docname"><reference refuri="Stringsandforloops-source.html">Stringsandforloops</reference></substitution_definition>
    <comment xml:space="preserve">Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free Documentation
License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being Forward, Prefaces, and
Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled "GNU Free Documentation
License".</comment>
    <section ids="strings-and-for-loops" names="strings\ and\ for\ loops">
        <title>Strings and <literal>for</literal> loops</title>
        <paragraph>Since a string is simply a sequence of characters, the <literal>for</literal> loop iterates over each character
            automatically. (As always, try to predict what the output will be from this code before you run it.)</paragraph>

    <program label="ac4_6_1" interactive='activecode' language="python">
    
        <input>
for achar in "Go Spot Go":
    print(achar)
        </input>
<tests>


</tests>

    </program>
        <paragraph>The loop variable <literal>achar</literal> is automatically assigned each character in the string “Go Spot Go” one at a time.
            We will refer to this type of sequence iteration as <strong>iteration by item</strong>. Note that the for loop
            processes the characters in a string or items in a sequence one at a time <strong>from left to right</strong>.</paragraph>
        <paragraph><strong>Check your understanding</strong></paragraph>

    <exercise label="question4_6_1">
        <statement>

        <paragraph>How many times is the word HELLO printed by the following statements?</paragraph>
        <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve">s = "python rocks"
for ch in s:
   print("HELLO")</literal_block>

        </statement>
<choices>

            <choice >
                <statement>
                    <p>10</p>
                </statement>
                <feedback>
                    <p>Iteration by item will process once for each item in the sequence.</p>
                </feedback>
            </choice>

            <choice >
                <statement>
                    <p>11</p>
                </statement>
                <feedback>
                    <p>The blank is part of the sequence.</p>
                </feedback>
            </choice>

            <choice correct='yes'>
                <statement>
                    <p>12</p>
                </statement>
                <feedback>
                    <p>Yes, there are 12 characters, including the blank.</p>
                </feedback>
            </choice>

            <choice >
                <statement>
                    <p>Error, the for statement needs to use the range function.</p>
                </statement>
                <feedback>
                    <p>The for statement can iterate over a sequence item by item.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="question4_6_2">
        <statement>

        <paragraph>How many times does the turtle in this code move to a random location?</paragraph>
        <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve"># Turtle name symbol drawing
import turtle
import random
wn = turtle.Screen()
annika = turtle.Turtle()
s = input("Please enter your name")
for ch in s:
   x = random.randrange(-200, 200)
   y = random.randrange(-150, 150)
   annika.goto(x, y)</literal_block>

        </statement>
<choices>

            <choice >
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>The turtle will move to as many locations as there are letters in the name.</p>
                </feedback>
            </choice>

            <choice >
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>The turtle will move to at least one location.</p>
                </feedback>
            </choice>

            <choice >
                <statement>
                    <p>7</p>
                </statement>
                <feedback>
                    <p>The turtle will move to as many locations as there are letters in the name.</p>
                </feedback>
            </choice>

            <choice correct='yes'>
                <statement>
                    <p>It depends on the length of the name the user enters.</p>
                </statement>
                <feedback>
                    <p>Yes, if the user enters "Sam", the turtle will move to 3 random locations.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
        <comment xml:space="preserve">.. mchoice:: question6_4_2  # removing this because we haven't covered slice yet
:answer_a: 4
:answer_b: 5
:answer_c: 6
:answer_d: Error, the for statement cannot use slice.
:correct: b
:feedback_a: Slice returns a sequence that can be iterated over.
:feedback_b: Yes, The blank is part of the sequence returned by slice.
:feedback_c: Check the result of s[3:8]. It does not include the item at index 8.
:feedback_d: Slice returns a sequence.
:practice: T

How many times is the word HELLO printed by the following statements?

.. code-block:: python

   s = "python rocks"
   for ch in s[3:8]:
      print("HELLO")</comment>
    </section>
</document>

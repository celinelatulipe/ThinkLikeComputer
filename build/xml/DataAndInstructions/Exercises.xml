<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.19 -->
<document source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <substitution_definition names="blank"><BlankNode></BlankNode></substitution_definition>
    <substitution_definition names="docname"><reference refuri="Exercises-source.html">Exercises</reference></substitution_definition>
    <comment xml:space="preserve">Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free Documentation
License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being Forward, Prefaces, and
Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled "GNU Free Documentation
License".</comment>
    <paragraph></paragraph>
    <section ids="exercises" names="exercises">
        <title>Exercises</title>
        <QuestionNode ids="spd-ex-1" line="18" names="spd_ex_1" runestone_options="{'number': 1, 'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_1', 'qnumber': '', 'question_label': '2.17.1'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
            <TabbedStuffNode divid="q1" line="21" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" tabbed_stuff_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'q1', 'divclass': 'alert alert-warning'}">
                <TabNode tabname="Question" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Question'}">

<exercise label="ch02_ex1">
    <statement>
                    <paragraph>Evaluate the following numerical expressions in your head, then use
                        the active code window to check your results:</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph><literal>5 ** 2</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>9 * 5</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>15 / 12</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>12 / 15</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>15 // 12</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>12 // 15</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>5 % 2</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>9 % 5</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>15 % 12</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>12 % 15</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>6 % 6</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>0 % 7</literal></paragraph>
                        </list_item>
                    </enumerated_list>

    </statement>
    <program label="ch02_ex1_editor" interactive='activecode' language="python">

        <input>

print(5**2)
        </input>
<tests>


</tests>

    </program>
</exercise>
                </TabNode>
                <TabNode tabname="Answer" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Answer'}">
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph><literal>5 ** 2  = 25</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>9 * 5 = 45</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>15 / 12 = 1.25</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>12 / 15 = 0.8</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>15 // 12 = 1</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>12 // 15 = 0</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>5 % 2 = 1</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>9 % 5 = 4</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>15 % 12 = 3</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>12 % 15 = 12</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>6 % 6 = 0</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>0 % 7 = 0</literal></paragraph>
                        </list_item>
                    </enumerated_list>
                </TabNode>
                <TabNode tabname="Discussion" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Discussion'}">
                    <DisqusNode line="63" runestone_options="{'shortname': 'interactivepython', 'identifier': 'c0a62044cac248859ce3695b46697ecc', 'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': ''}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
                    </DisqusNode>
                </TabNode>
            </TabbedStuffNode>
        </QuestionNode>
        <QuestionNode ids="spd-ex-2" line="67" names="spd_ex_2" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_2', 'qnumber': '', 'question_label': '2.17.3'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">

<exercise label="ex_2_2">
    <statement>
            <paragraph>What is the order of the arithmetic operations in the following expression.  Evaluate the expression by hand and then check your work.</paragraph>

    </statement>
    <program label="ex_2_2_editor" interactive='activecode' language="python">

        <input>
2 + (3 - 1) * 10 / 5 * (2 + 3)
        </input>
<tests>


</tests>

    </program>
</exercise>
        </QuestionNode>
        <QuestionNode ids="spd-ex-5" line="75" names="spd_ex_5" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_5', 'qnumber': '', 'question_label': '2.17.5'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
            <TabbedStuffNode divid="q5" line="77" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" tabbed_stuff_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'q5', 'divclass': 'alert alert-warning'}">
                <TabNode tabname="Question" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Question'}">

<exercise label="ex_2_5">
    <statement>
                    <paragraph>Challenge: Many people keep time using a 24 hour clock (11 is 11am and 23 is 11pm, 0 is midnight).
                        If it is currently 13 and you set your alarm to go off in 50 hours, it will be 15 (3pm).
                        Write a Python program to solve the general version of the above problem.
                        Ask the user for the time now (in hours), and then ask for the number of hours to wait for the alarm.
                        Your program should output what the time will be on the clock when the alarm goes off.</paragraph>

    </statement>
    <program label="ex_2_5_editor" interactive='activecode' language="python">
<prefix>


</prefix>

        <input>


        </input>
<tests>


</tests>

    </program>
</exercise>
                </TabNode>
                <TabNode tabname="Answer" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Answer'}">

    <program label="spd_q5_answer" interactive='activecode' language="python">
    
        <input>
## question 5 solution ##

current_time_string = input("What is the current time (in hours)? ")
waiting_time_string = input("How many hours do you have to wait? ")

current_time_int = int(current_time_string)
waiting_time_int = int(waiting_time_string)

hours = current_time_int + waiting_time_int

timeofday = hours % 24

print(timeofday)
        </input>
<tests>


</tests>

    </program>
                </TabNode>
            </TabbedStuffNode>
        </QuestionNode>
        <QuestionNode ids="spd-ex-6" line="109" names="spd_ex_6" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_6', 'qnumber': '', 'question_label': '2.17.8'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">

<exercise label="ex_2_6">
    <statement>
            <paragraph>It is possible to name the days 0 thru 6 where day 0 is Sunday and day 6 is Saturday.
                If you go on a wonderful holiday leaving on day number 3 (a Wednesday) and you return
                home after 10 nights you would return home on a Saturday (day 6). Write a general
                version of the program which asks for the starting day number, and the length of your
                stay, and it will tell you the number of day of the week you will return on.</paragraph>

    </statement>
    <program label="ex_2_6_editor" interactive='activecode' language="python">
<prefix>


</prefix>

        <input>


        </input>
<tests>


</tests>

    </program>
</exercise>
        </QuestionNode>
        <QuestionNode ids="spd-ex-7" line="121" names="spd_ex_7" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_7', 'qnumber': '', 'question_label': '2.17.10'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
            <TabbedStuffNode divid="q7" line="123" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" tabbed_stuff_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'q7', 'divclass': 'alert alert-warning'}">
                <TabNode tabname="Question" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Question'}">
                    <paragraph>Challenge: Take the sentence: <emphasis>All work and no play makes Jack a dull boy.</emphasis>
                        Store each word in a separate variable, then print out the sentence on
                        one line using <literal>print</literal>.</paragraph>

    <program label="ex_2_7" interactive='activecode' language="python">
<prefix>


</prefix>
    
        <input>


        </input>
<tests>


</tests>

    </program>
                </TabNode>
                <TabNode tabname="Answer" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Answer'}">

    <program label="spd_q7_answer" interactive='activecode' language="python">
    
        <input>
## question 7 solution ##

word1 = "All"
word2 = "work"
word3 = "and"
word4 = "no"
word5 = "play"
word6 = "makes"
word7 = "Jack"
word8 = "a"
word9 = "dull"
word10 = "boy."

print(word1 + ' ' +  word2 + ' ' + word3 + ' ' +  word4 + ' ' +  word5 + ' ' +  word6 + ' ' +  word7 + ' ' +  word8 + ' ' +  word9 + ' ' +  word10)
        </input>
<tests>


</tests>

    </program>
                </TabNode>
            </TabbedStuffNode>
        </QuestionNode>
        <QuestionNode ids="spd-ex-8" line="154" names="spd_ex_8" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_8', 'qnumber': '', 'question_label': '2.17.13'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">

<exercise label="ex_2_8">
    <statement>
            <paragraph>Add parentheses to the expression <literal>6 * 1 - 2</literal> to change its value from 4 to -6.</paragraph>

    </statement>
    <program label="ex_2_8_editor" interactive='activecode' language="python">

        <input>

print(6 * 1 -2)
        </input>
<tests>
from unittest.gui import TestCaseGui
class myTests(TestCaseGui):
    def testOne(self):
        self.assertEqual('-6\n', self.getOutput(), 'Checking output.')
myTests().main()
</tests>

    </program>
</exercise>
        </QuestionNode>
        <QuestionNode ids="spd-ex-9" line="170" names="spd_ex_9" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_9', 'qnumber': '', 'question_label': '2.17.15'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
            <TabbedStuffNode divid="q9" line="172" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" tabbed_stuff_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'q9', 'divclass': 'alert alert-warning'}">
                <TabNode tabname="Question" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Question'}">

<exercise label="ex_2_9">
    <statement>
                    <paragraph>Challenge: The formula for computing the final amount if one is earning
                        compound interest is given on Wikipedia as</paragraph>
                    <image alt="formula for compound interest" candidates="{'*': 'DataAndInstructions/Figures/compoundInterest.png'}" uri="DataAndInstructions/Figures/compoundInterest.png"></image>
                    <paragraph>Write a Python program that assigns the principal amount of 10000 to
                        variable <literal>P</literal>, assign to <literal>n</literal> the value 12, and assign to <literal>r</literal> the interest
                        rate of 8% (0.08).  Then have the program prompt the user for the number of years,
                        <literal>t</literal>, that the money will be compounded for.  Calculate and print the final
                        amount after <literal>t</literal> years.</paragraph>

    </statement>
    <program label="ex_2_9_editor" interactive='activecode' language="python">

        <input>

P = 10000
n = 12
r = 0.08

t = ??

        </input>
<tests>

from unittest.gui import TestCaseGui
import re
class myTests(TestCaseGui):
    def testOne(self):
        self.assertTrue(re.search(str(P * (1 + (r/n))**(n*t))[:5],
            self.getOutput()),
            'Checking Answer.')

myTests().main()
</tests>

    </program>
</exercise>
                </TabNode>
                <TabNode tabname="Answer" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Answer'}">

    <program label="spd_q9_answer" interactive='activecode' language="python">
    
        <input>
## question 9 solution ##

P = 10000
n = 12
r = 0.08

t = int(input("Compound for how many years? "))

final = P * ( ((1 + (r/n)) ** (n * t)) )

print("The final amount after", t, "years is", final)
        </input>
<tests>


</tests>

    </program>
                </TabNode>
            </TabbedStuffNode>
        </QuestionNode>
        <QuestionNode ids="spd-ex-10" line="227" names="spd_ex_10" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_10', 'qnumber': '', 'question_label': '2.17.18'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">

<exercise label="ex_2_10">
    <statement>
            <paragraph>Write a program that will compute the area of a circle. Prompt the user to enter the radius and save it to a variable called <literal>radius</literal>. Print a nice message back to the user with the answer.</paragraph>

    </statement>
    <program label="ex_2_10_editor" interactive='activecode' language="python">

        <input>
pi = 3.14

        </input>
<tests>
from unittest.gui import TestCaseGui
class myTests(TestCaseGui):
    def test_radius(self):
        self.assertIn("radius", self.getEditorText(), 'radius variable')
        self.assertIn(str(3.14*radius**2)[:4], self.getOutput(), 'Checking answer.')
myTests().main()
</tests>

    </program>
</exercise>
        </QuestionNode>
        <QuestionNode ids="spd-ex-11" line="244" names="spd_ex_11" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_11', 'qnumber': '', 'question_label': '2.17.20'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
            <TabbedStuffNode divid="q11" line="246" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" tabbed_stuff_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'q11', 'divclass': 'alert alert-warning'}">
                <TabNode tabname="Question" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Question'}">

<exercise label="ex_2_11">
    <statement>
                    <paragraph>Challenge: Write a program that will compute the area of a rectangle.  Prompt the user to enter the width and height of the rectangle  and store the values in variables called <literal>width</literal> and
                        <literal>height</literal>. Print a nice message with the answer..</paragraph>

    </statement>
    <program label="ex_2_11_editor" interactive='activecode' language="python">

        <input>

        </input>
<tests>
from unittest.gui import TestCaseGui
class myTests(TestCaseGui):
    def testOne(self):
        self.assertIn('width', self.getEditorText())
        self.assertIn('height', self.getEditorText())
        self.assertIn(str(width*height), self.getOutput(), 'Checking answer.')
myTests().main()
</tests>

    </program>
</exercise>
                </TabNode>
                <TabNode tabname="Answer" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Answer'}">

    <program label="spd_q11_answer" interactive='activecode' language="python">
    
        <input>
## question 11 solution

width = int(input("Width? "))
height = int(input("Height? "))

area = width * height

print("The area of the rectangle is", area)
        </input>
<tests>


</tests>

    </program>
                </TabNode>
            </TabbedStuffNode>
        </QuestionNode>
        <QuestionNode ids="spd-ex-12" line="281" names="spd_ex_12" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_12', 'qnumber': '', 'question_label': '2.17.23'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">

<exercise label="ex_2_12">
    <statement>
            <paragraph>Write a program that will compute MPG for a car. Prompt the user to enter the number of
                miles driven and store it in a variable called <title_reference>miles</title_reference> and the number of gallons used stored in a variable <title_reference>gallons</title_reference>.
                Print a nice message with the answer.</paragraph>

    </statement>
    <program label="ex_2_12_editor" interactive='activecode' language="python">

        <input>

        </input>
<tests>
from unittest.gui import TestCaseGui
import re
class myTests(TestCaseGui):
    def testOne(self):
       self.assertTrue(re.search(str(miles/gallons)[:5], self.getOutput()), 'Checking answer.')
myTests().main()
</tests>

    </program>
</exercise>
        </QuestionNode>
        <QuestionNode ids="spd-ex-13" line="298" names="spd_ex_13" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_13', 'qnumber': '', 'question_label': '2.17.25'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
            <TabbedStuffNode divid="q13" line="300" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst" tabbed_stuff_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'q13', 'divclass': 'alert alert-warning'}">
                <TabNode tabname="Question" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Question'}">

<exercise label="ex_2_13">
    <statement>
                    <paragraph>Challenge: Write a program that will convert degrees celsius to degrees fahrenheit.</paragraph>

    </statement>
    <program label="ex_2_13_editor" interactive='activecode' language="python">
<prefix>


</prefix>

        <input>


        </input>
<tests>


</tests>

    </program>
</exercise>
                </TabNode>
                <TabNode tabname="Answer" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Answer'}">

    <program label="spd_q13_answer" interactive='activecode' language="python">
    
        <input>
## question 13 solution ##

deg_c = int(input("What is the temperature in Celsius? "))

# formula to convert C to F is: (degrees Celcius) times (9/5) plus (32)
deg_f = deg_c * (9 / 5) + 32

print(deg_c, " degrees Celsius is", deg_f, " degrees Farenheit.")
        </input>
<tests>


</tests>

    </program>
                </TabNode>
                <TabNode tabname="Discussion" tabnode_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'tabname': 'Discussion'}">
                    <DisqusNode line="325" runestone_options="{'shortname': 'interactivepython', 'identifier': 'c4a929d598ab4c46b484f6abbcec2655', 'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': ''}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
                    </DisqusNode>
                </TabNode>
            </TabbedStuffNode>
        </QuestionNode>
        <QuestionNode ids="spd-ex-14" line="329" names="spd_ex_14" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_14', 'qnumber': '', 'question_label': '2.17.28'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">

<exercise label="ex_2_14">
    <statement>
            <paragraph>Ask the user for the temperature in Fahrenheit and store it in a variable call <literal>deg_f</literal>. Calculate the equivalent temperature in degrees Celsius and store it in <literal>deg_c</literal>. Output a message to the user giving the temperature in Celsius.</paragraph>

    </statement>
    <program label="ex_2_14_editor" interactive='activecode' language="python">

        <input>

        </input>
<tests>
from unittest.gui import TestCaseGui
class myTests(TestCaseGui):
    def testOne(self):
        self.assertIn('deg_f', self.getEditorText())
        self.assertIn('deg_c', self.getEditorText())
        ans = (deg_f - 32)*5/9
        self.assertAlmostEqual(ans, deg_c)
        self.assertIn(str(ans)[:min(len(str(ans)), 5)],    self.getOutput(), 'Checking answer.')
myTests().main()
</tests>

    </program>
</exercise>
        </QuestionNode>
        <QuestionNode ids="spd-ex-15" line="348" names="spd_ex_15" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_15', 'qnumber': '', 'question_label': '2.17.30'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
<exercise label='pp_2_15'   indentation='show' language='python'><statement>
            <paragraph>Piece together the code so that a user is asked for two numbers, and then the sum of those two numbers is printed out.</paragraph>
</statement>
<blocks><block order='3' >
<cline>num_one = input("Please enter your first number: ")</cline>
</block><block order='4' >
<cline>num_two = input("Please enter your second number: ")</cline>
</block><block order='1' >
<cline>sum_of_input = int(num_one) + int(num_two)</cline>
</block><block order='2' >
<cline>print(sum_of_input)</cline>
</block></blocks></exercise>        </QuestionNode>
        <QuestionNode ids="spd-ex-16" line="363" names="spd_ex_16" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_16', 'qnumber': '', 'question_label': '2.17.32'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
<exercise label='pp_2_16'   indentation='show' language='python'><statement>
            <paragraph>Write a program that will convert gallons to liters. This program will also need to get input from a user to see how many gallons should be converted and the result should be printed to the user.</paragraph>
</statement>
<blocks><block order='2' >
<cline>user_gallons = input("How many gallons should be converted?: ")</cline>
</block><block order='4' >
<cline>num_gallons = int(user_gallons)</cline>
</block><block order='1' >
<cline>liters = num_gallons * 3.785</cline>
</block><block order='3' >
<cline>print("Number of liters: " + str(liters))</cline>
</block></blocks></exercise>        </QuestionNode>
        <QuestionNode ids="spd-ex-17" line="379" names="spd_ex_17" runestone_options="{'subchapter': 'Exercises', 'chapter': 'DataAndInstructions', 'basecourse': 'FOPP-PIE', 'optional': '', 'optclass': '', 'divid': 'spd_ex_17', 'qnumber': '', 'question_label': '2.17.34'}" source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DataAndInstructions/Exercises.rst">
<exercise label='pp_2_17'   indentation='show' language='python'><statement>
            <paragraph>Write a program that will convert tablespoons to teaspoons. This program will also need to get input from a user to see how many tablespoons should be converted and the result should be printed to the user.</paragraph>
</statement>
<blocks><block order='1' >
<cline>user_tablespoons = float(input("How many tablespoons should be converted?: "))</cline>
</block><block order='2' >
<cline>teaspoons = user_tablespoons * 3</cline>
</block><block order='3' >
<cline>print("Number of teaspoons: " + str(teaspoons))</cline>
</block></blocks></exercise>        </QuestionNode>
        <comment xml:space="preserve">Contributed Exercises</comment>
        <comment xml:space="preserve">~~~~~~~~~~~~~~~~~~~~~</comment>
        <comment xml:space="preserve">.. raw:: html

{% for q in questions: %}
    &lt;div class='oneq full-width'&gt;
        {{ q['htmlsrc']|safe }}
    &lt;/div&gt;
{% endfor %}</comment>
    </section>
</document>

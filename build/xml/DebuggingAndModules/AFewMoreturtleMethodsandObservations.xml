<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.19 -->
<document source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DebuggingAndModules/AFewMoreturtleMethodsandObservations.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <substitution_definition names="blank"><BlankNode></BlankNode></substitution_definition>
    <substitution_definition names="docname"><reference refuri="AFewMoreturtleMethodsandObservations-source.html">AFewMoreturtleMethodsandObservations</reference></substitution_definition>
    <comment xml:space="preserve">Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free Documentation
License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being Forward, Prefaces, and
Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled "GNU Free Documentation
License".</comment>
    <section ids="a-few-more-turtle-methods-and-observations" names="a\ few\ more\ turtle\ methods\ and\ observations">
        <title>A Few More <literal>turtle</literal> Methods and Observations</title>
        <paragraph>Here is a table that summarizes common Turtle methods:</paragraph>
        <table>
            <tgroup cols="3">
                <colspec colwidth="10"></colspec>
                <colspec colwidth="10"></colspec>
                <colspec colwidth="79"></colspec>
                <thead>
                    <row>
                        <entry>
                            <paragraph>Method</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Parameters</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Description</paragraph>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <paragraph>Turtle</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Creates and returns a new turtle object</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>forward</paragraph>
                        </entry>
                        <entry>
                            <paragraph>distance</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Moves the turtle forward</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>backward</paragraph>
                        </entry>
                        <entry>
                            <paragraph>distance</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Moves the turle backward</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>right</paragraph>
                        </entry>
                        <entry>
                            <paragraph>angle</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Turns the turtle clockwise</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>left</paragraph>
                        </entry>
                        <entry>
                            <paragraph>angle</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Turns the turtle counter clockwise</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>up</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Picks up the turtle’s tail (pen)</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>down</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Puts down the turtle’s tail (pen)</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>color</paragraph>
                        </entry>
                        <entry>
                            <paragraph>color name</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Changes the color of the turtle and pen</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>fillcolor</paragraph>
                        </entry>
                        <entry>
                            <paragraph>color name</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Changes the color the turtle will use to fill a polygon</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>heading</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Returns the current heading</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>position</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Returns the current position</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>goto</paragraph>
                        </entry>
                        <entry>
                            <paragraph>x,y</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Move the turtle to position x,y</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>begin_fill</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Remember the starting point for a filled polygon</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>end_fill</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Close the polygon and fill with the current fill color</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>dot</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Leave a dot at the current position</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>stamp</paragraph>
                        </entry>
                        <entry>
                            <paragraph>None</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Leaves an impression of a turtle shape at the current location</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>shape</paragraph>
                        </entry>
                        <entry>
                            <paragraph>shapename</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Can be set to ‘arrow’, ‘triangle’, ‘classic’, ‘turtle’, ‘circle’, or ‘square’</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>speed</paragraph>
                        </entry>
                        <entry>
                            <paragraph>integer</paragraph>
                        </entry>
                        <entry>
                            <paragraph>0 = no animation, fastest; 1 = slowest; 10 = very fast</paragraph>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <paragraph>Here are a few more things that you might find useful as you write programs that use turtles.</paragraph>
        <bullet_list bullet="*">
            <list_item>
                <paragraph>Turtle methods can use negative angles or distances. So <literal>tess.forward(-100)</literal> will move
                    tess backwards, and <literal>tess.left(-30)</literal> turns her to the right. Additionally, because there
                    are 360 degrees in a circle, turning 30 to the left will leave you facing in the same
                    direction as turning 330 to the right! (The on-screen animation will differ, though
                    — you will be able to tell if tess is turning clockwise or counter-clockwise!)</paragraph>
                <paragraph>This suggests that we don’t need both a left and a right turn method — we could be
                    minimalists, and just have one method. There is also a <emphasis>backward</emphasis> method. (If you are
                    very nerdy, you might enjoy saying <literal>alex.backward(-100)</literal> to move alex forward!)</paragraph>
                <paragraph>Reviewing a few basic facts about geometry and number lines, like we’ve done here, is a
                    good start if we’re going to play with turtles.</paragraph>
            </list_item>
            <list_item>
                <paragraph>A turtle’s pen can be picked up or put down. This allows us to move a turtle
                    to a different place without drawing a line. The methods are <literal>up</literal> and <literal>down</literal>.
                    Note that the methods <literal>penup</literal> and <literal>pendown</literal> do the same thing.</paragraph>
                <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve">alex.up()
alex.forward(100)     # this moves alex, but no line is drawn
alex.down()</literal_block>
            </list_item>
            <list_item>
                <paragraph>Every turtle can have its own shape. The ones available “out of the box” are <literal>arrow</literal>,
                    <literal>blank</literal>, <literal>circle</literal>, <literal>classic</literal>, <literal>square</literal>, <literal>triangle</literal>, <literal>turtle</literal>.</paragraph>
                <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve">...
alex.shape("turtle")
...</literal_block>
            </list_item>
            <list_item>
                <paragraph>You can speed up or slow down the turtle’s animation speed. (Animation
                    controls how quickly the turtle turns and moves forward). Speed settings can
                    be set between 1 (slowest) to 10 (fastest). But if you set the speed to 0,
                    it has a special meaning — turn off animation and go as fast as possible.</paragraph>
                <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve">alex.speed(10)</literal_block>
            </list_item>
            <list_item>
                <paragraph>A turtle can “stamp” its footprint onto the canvas, and this will remain after
                    the turtle has moved somewhere else. Stamping works even when the pen is up.</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>Let’s do an example that shows off some of these new features. Note that the code below uses a for loop
            to make the turtle move repeatedly 30 times. We’ll cover for loops in the next chapter.</paragraph>

    <program label="ac3_14_1" interactive='activecode' language="python">
    
        <input>
import turtle
wn = turtle.Screen()
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess.color("blue")
tess.shape("turtle")

dist = 5
tess.up()                     # this is new
for _ in range(30):    # start with size = 5 and grow by 2
    tess.stamp()                # leave an impression on the canvas
    tess.forward(dist)          # move tess along
    tess.right(24)              # and turn her
    dist = dist + 2

tess.color("red")
wn.exitonclick()
        </input>
<tests>


</tests>

    </program>
        <paragraph>One more thing to be careful about. All except one of the shapes you see on the screen here are
            footprints created by <literal>stamp</literal>. After the loop, we change tess to be red, and that way you see where
            the actual turtle is (the red one is not a stamp - it’s tess!).</paragraph>
        <paragraph><strong>Mixed up program</strong></paragraph>
<exercise label='pp3_14_1'   indentation='hide' language='python'><statement>
        <paragraph>The following program uses the stamp method to create a circle of turtle shapes as shown to the left:</paragraph>
        <image align="left" alt="image of a circle of turtle shapes" candidates="{'*': 'DebuggingAndModules/Figures/TurtleCircle.png'}" uri="DebuggingAndModules/Figures/TurtleCircle.png" width="150"></image>
        <paragraph>But the lines are mixed up.  The program should do all necessary set-up, create the turtle, set the shape to “turtle”, and pick up the pen.  Then the turtle should repeat the following ten times: go forward 50 pixels, leave a copy of the turtle at the current position, reverse for 50 pixels, and then turn right 36 degrees.  After the loop, set the window to close when the user clicks in it.</paragraph>
        <paragraph>Drag the blocks of statements from the left column to the right column and put them in the right order with the correct indention.  Click on <emphasis>Check Me</emphasis> to see if you are right. You will be told if any of the lines are in the wrong order or are incorrectly indented.</paragraph>
</statement>
<blocks><block order='1' >
<cline>import turtle</cline>
<cline>wn = turtle.Screen()</cline>
<cline>jose = turtle.Turtle()</cline>
<cline>jose.shape("turtle")</cline>
<cline>jose.penup()</cline>
</block><block order='6' >
<cline>for size in range(10):</cline>
</block><block order='4' >
<cline>  jose.forward(50)</cline>
</block><block order='7' >
<cline>  jose.stamp()</cline>
</block><block order='3' >
<cline>  jose.forward(-50)</cline>
</block><block order='2' >
<cline>  jose.right(36)</cline>
</block><block order='5' >
<cline>wn.exitonclick()</cline>
</block></blocks></exercise>        <paragraph><strong>Mixed up program</strong></paragraph>
<exercise label='pp3_14_2'   indentation='hide' language='python'><statement>
        <paragraph>The following program uses the stamp method to create a line of turtle shapes as shown to the left:</paragraph>
        <image align="left" alt="image of a line of turtle shapes" candidates="{'*': 'DebuggingAndModules/Figures/Turtle3Stamp.png'}" uri="DebuggingAndModules/Figures/Turtle3Stamp.png" width="150"></image>
        <paragraph>But the lines are mixed up.  The program should do all necessary set-up, create the turtle, set the shape to “turtle”, and pick up the pen.  Then the turtle should repeat the following three times: go forward 50 pixels and leave a copy of the turtle at the current position.  After the loop, set the window to close when the user clicks in it.</paragraph>
        <paragraph>Drag the blocks of statements from the left column to the right column and put them in the right order with the correct indention.  Click on <emphasis>Check Me</emphasis> to see if you are right. You will be told if any of the lines are in the wrong order or are incorrectly indented.</paragraph>
</statement>
<blocks><block order='6' >
<cline>import turtle</cline>
<cline>wn = turtle.Screen()</cline>
</block><block order='2' >
<cline>nikea = turtle.Turtle()</cline>
</block><block order='8' >
<cline>nikea.shape("turtle")</cline>
</block><block order='3' >
<cline>nikea.penup()</cline>
</block><block order='1' >
<cline>for size in range(3):</cline>
</block><block order='4' >
<cline>  nikea.forward(50)</cline>
</block><block order='5' >
<cline>  nikea.stamp()</cline>
</block><block order='7' >
<cline>wn.exitonclick()</cline>
</block></blocks></exercise>    </section>
</document>

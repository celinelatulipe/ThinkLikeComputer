<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.19 -->
<document source="/Users/clatulip/Documents/RunestoneBooks/ThinkLikeComputer/_sources/DebuggingAndModules/intro-DebuggingGeneral.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <substitution_definition names="blank"><BlankNode></BlankNode></substitution_definition>
    <substitution_definition names="docname"><reference refuri="intro-DebuggingGeneral-source.html">intro-DebuggingGeneral</reference></substitution_definition>
    <comment xml:space="preserve">Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free Documentation
License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being Forward, Prefaces, and
Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled "GNU Free Documentation
License".</comment>
    <section ids="introduction-to-debugging" names="introduction\ to\ debugging">
        <title>Introduction to Debugging</title>
        <paragraph classes="blockquote">“The art of debugging is figuring out what you really told your program to do rather than what you thought you told it to do.”  — Andrew Singer</paragraph>
        <paragraph>This chapter will spend some time talking about what happens when errors occur as well as how to fix
            the errors that you will inevitably come across.</paragraph>
        <paragraph>Before computers became digital, debugging could mean looking for insects impeding the functioning of physical relays as in this somewhat <reference name="apocryphal tale" refuri="https://www.computerworld.com/article/2515435/app-development/moth-in-the-machine--debugging-the-origins-of--bug-.html">apocryphal tale</reference><target ids="apocryphal-tale" names="apocryphal\ tale" refuri="https://www.computerworld.com/article/2515435/app-development/moth-in-the-machine--debugging-the-origins-of--bug-.html"></target> about <reference name="Admiral Grace Hopper" refuri="https://en.wikipedia.org/wiki/Admiral_Grace_Hopper">Admiral Grace Hopper</reference><target ids="admiral-grace-hopper" names="admiral\ grace\ hopper" refuri="https://en.wikipedia.org/wiki/Admiral_Grace_Hopper"></target>, a pioneer of computer programming.</paragraph>
        <paragraph>Nowadays, debugging doesn’t involve bug guts all over your computer but it can still be just as frustrating. To cope with this frustration, this chapter will present some strategies to help you understand why the program you wrote does not behave as intended.</paragraph>
        <paragraph>Many people think debugging is some kind of punishment for not being smart enough to write code correctly the first time.  But nobody does that, failure in programming is part of the deal.  Here’s a fun video to keep in mind as you learn to program.</paragraph>

    <video xml:id="c0bsKc4tiuY" youtube="c0bsKc4tiuY" width="560" />
            <paragraph>CC BY–NC–ND 4.0 International <reference name="Ted.com" refuri="ted.com">Ted.com</reference><target ids="ted-com" names="ted.com" refuri="ted.com"></target></paragraph>
        <section ids="learning-goals" names="learning\ goals">
            <title>Learning Goals</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>To understand good programming strategies to avoid errors</paragraph>
                </list_item>
                <list_item>
                    <paragraph>To understand common kinds of exceptions and their likely causes</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="objectives" names="objectives">
            <title>Objectives</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Given a piece of code identify the syntax errors based on error messages</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Given a piece of code find the (ValueError, TypeError, SyntaxError, ParseError, NameError)</paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>

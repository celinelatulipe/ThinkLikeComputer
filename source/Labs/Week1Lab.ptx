<?xml version="1.0"?>
<!-- Generated by Docutils 0.19 -->

    <section xml:id="_week-1-lab">
        <title>Week 1 Lab</title>
        <note>
            <title>Material Covered</title>
            <p>Today‚Äôs lab focuses on getting Python and IDLE installed and working on your computer.</p>
        </note>
        <subsection xml:id="week1lab_level-1">
            <title>Level 1 - Show IDLE is working on your computer </title>
        <p><ol>
            <li>
                <p>Follow the instructions on UMLearn in Week 0 ‚Äì Programming Resources. Then watch the IDLE introduction movie and go on to complete the next step.</p>
            </li>
            <li>
                <p>Launch IDLE:</p>
                <p>On a Mac, use spotlight (type command-space and then type IDLE) or find IDLE in your launchpad and double-click on it.</p>
                <p>On Windows, type IDLE in the Windows search bar.</p>
            </li>
            <li>
                <p>When IDLE opens, you are in the IDLE console. To make sure it is working, type the following: <c>print(‚ÄúHello World‚Äù)</c></p>
            </li>
            <li>
                <p>Then in the upper left hand corner, click ‚ÄòFile‚Äô, then ‚ÄòNew File‚Äô to open an empty file that you can then type, run, and save code. </p>
            </li>
            <li>
                <p>Now type the same code from Step 3 and then save this file with the name:  <c>test.py</c></p>
                <p> <term> Pick a directory to save your .py files so in the future you can easily find them. </term> </p>
            </li>
            <li>
                <p>When you open a new file, a ‚ÄòRun‚Äô option should appear in your toolbar. Click it and then click ‚ÄòRun Module‚Äô.</p>
            </li>
            <li>
                <p>Show your instructor that you have IDLE installed and working on your computer to get credit for Part 1. </p>
            </li>
        </ol></p>
            <note>
                <p> <term> Integrated Development and Learning Environment (IDLE) </term>
                    <p><ol>
                        <li>
                            <p>IDLE is a simple programming environment that comes with any Python 3.x installation.</p>
                        </li>
                        <li>
                            <p>It offers a good way to test out syntax and see how a certain Python command works.</p>
                        </li>
                        <li>
                            <p>Typing code in IDLE is NOT the same thing as typing code in a file but it does offer the ability to create,        
                                edit and save Python programs as <c>.py</c> files.</p>
                        </li>
                        <li>
                            <p>When you create a Python program and save it as a <c>.py</c> file, you should run it to test it.</p>
                        </li>
                        <li>
                            <p>The main assignments for this course require the submission of <c>.py</c> files on UMLearn.</p>
                        </li>
                    </ol></p>                    
                    </p>
            </note>
        </subsection>
        <subsection xml:id="week1lab_level-2">
            <title>Level 2 - Write a turtle program </title>
            <note>
                <p> <term>Do NOT ever save one of your files as turtle.py</term> because this action will overwrite the turtle module and your turtle-based programs will stop working. </p>
            </note>
            <p><ol>
                <li>
                    <p>Open a new file in IDLE, then type in the following: </p>
                    <p></p>
                    <program language="python">
                        <input>  
                        import turtle
                        wn = turtle.Screen()
                        niki = turtle.Turtle()
                        </input>
                    </program>
                </li>
                <li>
                    <p>Notice that the color of ‚Äúimport‚Äù is orange. This is called syntax highlighting which IDLE does to show that it recognizes certain Python commands. </p>
                </li>
                <li>
                    <p>Add a few turtle movements to the above code and then save this program as <c>lab_test.py</c></p>
                </li>
                <li>
                    <p>Now click Run -> Run Module (or type F5) to run your program. This will open a new window with title of Python Turtle Graphics.</p>
                </li>
                <li>
                    <p>Notice the three dark red >>> in IDLE which indicates that the program ran and is finished with IDLE ready to run another program.</p>
                </li>
                <li>
                    <p>Edit your program so that your turtle draws a simple picture of a house ‚åÇ and save this file as <c>house.py</c></p>
                    <p>If you get stuck, add the following code (with comments to describe what the code does):</p>
                    <program language="python">
                        <input> 
                    # draws bottom of house
                    niki.right(90)
                    niki.forward(128)
                    niki.left(90)   
                    niki.forward(128)
                    niki.left(90)
                    niki.forward(128)
                    niki.left(90)
                    niki.forward(128)
                    
                    # draws roof of house
                    niki.right(135)
                    niki.forward(90)
                    niki.right(90)
                    niki.forward(90)
                        </input>
                    </program>
                </li>
                <li>
                    <p>Add a comment block at the top of your file.</p>
                    <program language="python">
                        <input> 
                    ################################
                    # First name  Last name
                    # COMP 1000
                    # Week 1 Lab, Part 2
                    # Turtle house drawing 
                    ################################
                        </input>
                    </program>
                </li>
                <li>
                    <p>Lastly, select 'Show Line Numbers' under 'Options' in the toolbar.
                    </p>
                    <image source="Labs/Figures/ShowLineNumbersMenuBarIDLE.png" width="70%"/>
                </li>
                <li>
                    <p>Show your instructor that your turtle program draws a house to get credit for Part 2.</p>
                </li>
            </ol></p>
            <note>
                <li>
                    <p>For windows operating system users: to associate <c>.py</c> files with IDLE, right click on the file and select ‚ÄúProperties‚Äù from the context menu and then the ‚ÄúChange‚Äù button where it says ‚ÄúOpen with..‚Äù</p>
                </li>
            </note>
        </subsection>
        <subsection xml:id="week1lab_level-3">
            <title>Level 3 - Type turtle program into IDLE</title>
            <p>In this last part, you will type your turtle program directly into the IDLE console, one line at a time. 
            This is a very different experience because IDLE interprets and executes each line after you hit ‚Äòreturn‚Äô.</p>
                <p><ol>
                    <li>
                        <p>In the IDLE console, type <c>import turtle</c> then press 'return'. Python imported the turtle module and is now ready to accept the next command (see the >>>).</p>
                    </li>
                    <li>
                        <p>Next type <c>wn = turtle.Screen()</c> then press 'return'. Python creates and displays an empty turtle canvas and again the prompt >>> indicates that IDLE is ready for the next command. </p>
                    </li>
                    <li>
                        <p>Now type <c>niki = turtle.Turtle()</c> and press 'return'. Python creates a turtle and displays it at the x,y coordinate (0,0) which is the center of the canvas. Again the >>> prompt appears.</p>
                    </li>
                    <li>
                        <p>Now make the turtle move with <c>niki.forward(100)</c>.</p>
                    </li>
                    <li>
                        <p>Notice that text entered into IDLE can‚Äôt be edited after the line of code has been executed when you press 'return'. Test this out by trying to change a line of code that you entered. </p>
                    </li>
                    <li>
                        <p>Let‚Äôs say you were writing a program and you didn‚Äôt remember how Python handles mathematical order of operations (for example,  ‚Äú4 + 8/2‚Äù). How is IDLE useful in this situation as compared to just typing the statement directly into your program file?</p>
                    </li>
                    <li>
                        <p>Show your instructor your IDLE console to demonstrate that you have tried the above commands for Steps 1 to 4 to get credit for Part 3.</p>
                    </li>
                </ol></p>
                <p>Congratulations you have completed your first lab writing Python code! üëèüéâü•≥</p>
        </subsection>
    </section>


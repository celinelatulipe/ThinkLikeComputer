<?xml version="1.0"?>
<section xml:id="p3pt_introduction-to-problem-types">
  <title>Introduction to Problem Types</title>
  <p>Please read the following, watch the videos, and try to solve the problems.</p>
  <subsection xml:id="p3pt_solving-mixed-up-code-problems">
    <title>Solving Mixed-up Code Problems</title>
    <p>If you see a problem like the one below you will need to put the mixed-up
                code in the correct order on the right side. You
                may need to indent the blocks as well.  There may also be extra blocks that are not
                needed in a correct solution that you can leave on the left side. Click the <q>Check</q> button
                to check your solution.</p>
    <p>See the video below for an example.</p>
    <video xml:id="iwgex1-parsons1-p3" youtube="Rf7oWHlo-e0" width="650"/>
    <p>Try to solve the following mixed-up code problem.  This problem doesn't require any indentation.</p>
    <exercise label="intro-simple-parsons-no-indent-p3" numbered="yes" adaptive="yes" indentation="hide" language="python">
      <statement>
        <p>Drag the blocks from the left and put them in the correct order on the right. The text in each block
                defines the order.</p>
      </statement>
      <blocks>
        <block order="3">
          <cline>First block</cline>
        </block>
        <block order="1">
          <cline>Second block</cline>
        </block>
        <block order="2">
          <cline>Third block</cline>
        </block>
      </blocks>
    </exercise>
    <p>Try to solve the following mixed-up code problem. This problem requires indentation.</p>
    <exercise label="intro-simple-parsons-indent-p3" numbered="yes" adaptive="yes" indentation="hide" language="python">
      <statement>
        <p>Drag the blocks from the left and put them in the correct order on the right with the correct indentation.
                The text in each block defines the order and indentation.</p>
      </statement>
      <blocks>
        <block order="1">
          <cline>First block</cline>
        </block>
        <block order="2">
          <cline>Second block</cline>
        </block>
        <block order="3">
          <cline>    Third block that needs to be indented</cline>
        </block>
      </blocks>
    </exercise>
    <p>Try to solve the following mixed-up code problem. This problem requires indentation and has extra blocks that are not needed in a correct solution.</p>
    <exercise label="intro-simple-parsons-indent-with-dist-p3" numbered="yes" adaptive="yes" indentation="hide" language="python">
      <statement>
        <p>Drag the blocks from the left and put them in the correct order on the right with the correct indentation.
                There is an extra block that is not needed in the correct solution.</p>
      </statement>
      <blocks>
        <block order="3">
          <cline>First block</cline>
        </block>
        <block order="2">
          <choice correct="yes">
            <cline>Second block</cline>
          </choice>
          <choice>
            <cline>Extra block that is not needed : This block is not needed</cline>
          </choice>
        </block>
        <block order="4">
          <cline>    Third block that needs to be indented</cline>
        </block>
      </blocks>
    </exercise>
    <p>The mixed-up code problems have a <q>Help me</q> button at the bottom of the
                problem. Once you have checked at least three incorrect solutions you can
                click the button for help.  It will remove an incorrect code block, if you used
                one in your solution, or combine two blocks into one if there are more
                than three blocks left.</p>
    <p>See the video below for an example.</p>
    <video xml:id="iwgex1-parsons2-p3" youtube="QejZ7u642IU" width="650"/>
  </subsection>
  <subsection xml:id="p3pt_solving-write-code-problems">
    <title>Solving Write Code Problems</title>
    <p>If you see a problem like the one below, you will need to write code.  The problem
                will have unit tests that you can run to check that your code is working
                correctly.  Click on the <q>Run</q> button to compile and run your code.  Look after
                the code area for compiler errors and/or unit test results.</p>
    <p>See the video below for an example.</p>
    <video xml:id="p3-write-code-video-ex" youtube="w9hTOJ7iJpE" width="1020"/>
    <p>Finish writing the code for the following problem.</p>
    <exercise label="intro-sample-write-code-triple-p3">
      <statement>
        <p>Write a function called <c>triple(num)</c> that takes a number <c>num</c> and
                returns the number times 3. For example, <c>triple(2)</c> should return 6 and
                <c>triple(-1)</c> should return -3.  Look below the code to check for any
                compiler errors or the results
                from the test cases.  Be sure to <c>return</c> the result.</p>
      </statement>
      <program label="intro-sample-write-code-triple-p3_editor" interactive="activecode" language="python">
        <input>
def triple(num):
    # write code here

print(triple(2))
print(triple(-1))

        </input>
        <tests>
from unittest.gui import TestCaseGui
class myTests(TestCaseGui):

    def testOne(self):
        self.assertEqual(triple(2),6,"triple(2)")
        self.assertEqual(triple(3),9,"triple(3)")
        self.assertEqual(triple(-1),-3,"triple(-1)")
        self.assertEqual(triple(0),0,"triple(0)")
        self.assertEqual(triple(11),33,"triple(11)")

myTests().main()
</tests>
      </program>
    </exercise>
  </subsection>
  <subsection xml:id="p3pt_feedback-6">
    <title>Feedback</title>
    <exercise label="p3-intro-sa">
      <statement>
        <p>Please provide feedback here. Please share any comments, problems, or suggestions.</p>
      </statement>
    </exercise>
  </subsection>
  <subsection xml:id="p3pt_what-to-do-next-6">
    <title>What to do next</title>
    <raw format="html" xml:space="preserve">&lt;p&gt;Click on the following link to go the practice problems: &lt;a id="p3pt-practice"&gt;&lt;font size="+2"&gt;Practice Problems&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;</raw>
    <raw format="html" xml:space="preserve">&lt;script type="text/javascript"&gt;

  function getCookie(cname) {
     let name = cname + "=";
     let decodedCookie = decodeURIComponent(document.cookie);
     let ca = decodedCookie.split(';');
     for(let i = 0; i &lt;ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) == ' ') {
           c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
           return c.substring(name.length, c.length);
        }
     }
     return "";
  }

  function setCookie(cname, cvalue) {
     document.cookie = cname + "=" + cvalue + ";";
  }

  window.onload = function() {

     a = document.getElementById("p3pt-practice")

     // get prev set cookie
     var EXP_COOKIE = 'p3pt-parsons-or-write'
     var cond = getCookie(EXP_COOKIE);

     // if no prev set cookie: generate random condition and set cookie
     if (cond != 'p' &amp;&amp; cond != 'w') {
        var v = Math.floor(Math.random() * 2);
        if (v &lt; 1) {
            cond = 'p';
        } else {
            cond = 'w';
        }
        setCookie(EXP_COOKIE, cond);
     }

     if (cond == 'p') {
        a.href = "p3-parsons.html"
     } else if (cond == 'w') {
        a.href = "p3-write.html"
     }
  };
&lt;/script&gt;</raw>
  </subsection>
</section>

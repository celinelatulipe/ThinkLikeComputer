<?xml version="1.0"?>
<!--<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd"> -->
<!--Generated by Docutils 0.19 -->
<section xml:id="_exercises">
	<title>Exercises</title>
	<exercise xml:id="chapter2_ex1">
		<statement>
			<p>
				Evaluate the following numerical expressions in your head, then use
				the active code window to check your results:
			</p>

			<p>
				<ol>
					<li>
						<p>
							<c>5 ** 2</c>
						</p>
					</li>

					<li>
						<p>
							<c>9 * 5</c>
						</p>
					</li>

					<li>
						<p>
							<c>15 / 12</c>
						</p>
					</li>

					<li>
						<p>
							<c>12 / 15</c>
						</p>
					</li>

					<li>
						<p>
							<c>15 // 12</c>
						</p>
					</li>

					<li>
						<p>
							<c>12 // 15</c>
						</p>
					</li>

					<li>
						<p>
							<c>5 % 2</c>
						</p>
					</li>

					<li>
						<p>
							<c>9 % 5</c>
						</p>
					</li>

					<li>
						<p>
							<c>15 % 12</c>
						</p>
					</li>

					<li>
						<p>
							<c>12 % 15</c>
						</p>
					</li>

					<li>
						<p>
							<c>6 % 6</c>
						</p>
					</li>

					<li>
						<p>
							<c>0 % 7</c>
						</p>
					</li>
				</ol>
            </p>
			</statement>
			<program interactive="activecode" language="python" xml:id="chapter2_ac1">
			<input>
print(5**2)
			</input>
			<tests>
			</tests>
		</program><solution>
		5 ** 2  = 25
		9 * 5 = 45
		15 / 12 = 1.25
		12 / 15 = 0.8
		15 // 12 = 1
		12 // 15 = 0
		5 % 2 = 1
		9 % 5 = 4
		15 % 12 = 3
		12 % 15 = 12
		6 % 6 = 0
		0 % 7 = 0
		<p>
			<ol>
				<li>
					<p>
						<c>5 ** 2  = 25</c>
					</p>
				</li>

				<li>
					<p>
						<c>9 * 5 = 45</c>
					</p>
				</li>

				<li>
					<p>
						<c>15 / 12 = 1.25</c>
					</p>
				</li>

				<li>
					<p>
						<c>12 / 15 = 0.8</c>
					</p>
				</li>

				<li>
					<p>
						<c>15 // 12 = 1</c>
					</p>
				</li>

				<li>
					<p>
						<c>12 // 15 = 0</c>
					</p>
				</li>

				<li>
					<p>
						<c>5 % 2 = 1</c>
					</p>
				</li>

				<li>
					<p>
						<c>9 % 5 = 4</c>
					</p>
				</li>

				<li>
					<p>
						<c>15 % 12 = 3</c>
					</p>
				</li>

				<li>
					<p>
						<c>12 % 15 = 12</c>
					</p>
				</li>

				<li>
					<p>
						<c>6 % 6 = 0</c>
					</p>
				</li>

				<li>
					<p>
						<c>0 % 7 = 0</c>
					</p>
				</li>
			</ol>
        </p>
		</solution>
	</exercise>

	<exercise label="ex_2_2">
		<statement>
			<p>
				What is the order of the arithmetic operations in the following expression.
				Evaluate the expression by hand and then check your work.
			</p>
		</statement>


		<program label="ex_2_2_editor" interactive="activecode" language="python">
			<input>
2 + (3 - 1) * 10 / 5 * (2 + 3)
			</input>
			<tests>
			</tests>
		</program>
	</exercise>

	<exercise xml:id="chapter2_ex2">
		<statement>
			<p>
				Challenge: Many people keep time using a 24 hour clock (11 is 11am and 23 is 11pm, 0 is midnight).
				If it is currently 13 and you set your alarm to go off in 50 hours, it will be 15 (3pm).
				Write a Python program to solve the general version of the above problem.
				Ask the user for the time now (in hours), and then ask for the number of hours to wait for the alarm.
				Your program should output what the time will be on the clock when the alarm goes off.
			</p>
		</statement>
        <program interactive="activecode" language="python" xml:id="chapter2_ac2">
		<prefix>
		</prefix>
		<input>
		</input>
		<tests>
		</tests>
	</program>
    <solution>
	<program language="python">
		<input>
## question 5 solution ##
current_time_string = input("What is the current time (in hours)? ")
waiting_time_string = input("How many hours do you have to wait? ")
current_time_int = int(current_time_string)
waiting_time_int = int(waiting_time_string)
hours = current_time_int + waiting_time_int
timeofday = hours % 24
print(timeofday)
		</input>
		<tests>
		</tests>
	</program>
</solution>
</exercise>

<exercise label="ex_2_6">
	<statement>
		<p>
			It is possible to name the days 0 thru 6 where day 0 is Sunday and day 6 is Saturday.
			If you go on a wonderful holiday leaving on day number 3 (a Wednesday) and you return
			home after 10 nights you would return home on a Saturday (day 6).
			Write a general
			version of the program which asks for the starting day number, and the length of your
			stay, and it will tell you the number of day of the week you will return on.
		</p>
	</statement>


	<program label="ex_2_6_editor" interactive="activecode" language="python">
		<prefix>
		</prefix>
		<input>
		</input>
		<tests>
		</tests>
	</program>
</exercise>




<exercise xml:id="chapter3_ex1"><statement/><program interactive="" language="" xml:id="chapter2_ac3"/>
	<solution>
		<program language="python">
			<input>
## question 7 solution ##
word1 = "All"
word2 = "work"
word3 = "and"
word4 = "no"
word5 = "play"
word6 = "makes"
word7 = "Jack"
word8 = "a"
word9 = "dull"
word10 = "boy."
print(word1 + ' ' +  word2 + ' ' + word3 + ' ' +  word4 + ' ' +  word5 + ' ' +  word6 + ' ' +  word7 + ' ' +  word8 + ' ' +  word9 + ' ' +  word10)
			</input>
			<tests>
			</tests>
		</program>
	</solution>
</exercise>

<exercise label="ex_2_8">
	<statement>
		<p>
			Add parentheses to the expression <c>6 * 1 - 2</c> to change its value from 4 to -6.
		</p>
	</statement>


	<program label="ex_2_8_editor" interactive="activecode" language="python">
		<input>
print(6 * 1 -2)
		</input>
		<tests>
		from unittest.gui import TestCaseGui
		class myTests(TestCaseGui):
		def testOne(self):
		self.assertEqual('-6\n', self.getOutput(), 'Checking output.')
		myTests().main()
		</tests>
	</program>
</exercise>

<exercise xml:id="chapter2_ex4">
	<statement>
		<p>
			Challenge: The formula for computing the final amount if one is earning
			compound interest is given on Wikipedia as
		</p>

		<image source="DataAndInstructions/Figures/compoundInterest.png" width="50%" alt="formula for compound interest"/>
			<p>
				Write a Python program that assigns the principal amount of 10000 to
				variable <c>P</c>, assign to <c>n</c> the value 12, and assign to <c>r</c> the interest
				rate of 8% (0.08).
				Then have the program prompt the user for the number of years,
				<c>t</c>, that the money will be compounded for.
				Calculate and print the final
				amount after <c>t</c> years.
			</p>
		</statement>
        <program interactive="activecode" language="python" xml:id="chapter2_ac4">
		<input>
P = 10000
n = 12
r = 0.08
t = ??
		</input>
		<tests>
		from unittest.gui import TestCaseGui
		import re
		class myTests(TestCaseGui):
		def testOne(self):
		self.assertTrue(re.search(str(P * (1 + (r/n))**(n*t))[:5],
		self.getOutput()),
		'Checking Answer.')
		myTests().main()
		</tests>
	</program>
    <solution>
	<program language="python">
		<input>
## question 9 solution ##
P = 10000
n = 12
r = 0.08
t = int(input("Compound for how many years? "))
final = P * ( ((1 + (r/n)) ** (n * t)) )
print("The final amount after", t, "years is", final)
		</input>
		<tests>
		</tests>
	</program>
</solution>
</exercise>

<exercise label="ex_2_10">
	<statement>
		<p>
			Write a program that will compute the area of a circle.
			Prompt the user to enter the radius and save it to a variable called <c>radius</c>.
			Print a nice message back to the user with the answer.
		</p>
	</statement>


	<program label="ex_2_10_editor" interactive="activecode" language="python">
		<input>
pi = 3.14
		</input>
		<tests>
		from unittest.gui import TestCaseGui
		class myTests(TestCaseGui):
		def test_radius(self):
		self.assertIn("radius", self.getEditorText(), 'radius variable')
		self.assertIn(str(3.14*radius**2)[:4], self.getOutput(), 'Checking answer.')
		myTests().main()
		</tests>
	</program>
</exercise>

<exercise xml:id="chapter2_ex5">
	<statement>
		<p>
			Challenge: Write a program that will compute the area of a rectangle.
			Prompt the user to enter the width and height of the rectangle  and store the values in variables called <c>width</c> and
			<c>height</c>.
			Print a nice message with the answer..
		</p>
	</statement>
    <program interactive="activecode" language="python" xml:id="chapter2_ac4_1">
	<input>
	</input>
	<tests>
	from unittest.gui import TestCaseGui
	class myTests(TestCaseGui):
	def testOne(self):
	self.assertIn('width', self.getEditorText())
	self.assertIn('height', self.getEditorText())
	self.assertIn(str(width*height), self.getOutput(), 'Checking answer.')
	myTests().main()
	</tests>
</program>
<solution>
<program language="python">
	<input>
## question 11 solution
width = int(input("Width? "))
height = int(input("Height? "))
area = width * height
print("The area of the rectangle is", area)
	</input>
	<tests>
	</tests>
</program>
</solution>
</exercise>

<exercise label="ex_2_12">
	<statement>
		<p>
			Write a program that will compute MPG for a car.
			Prompt the user to enter the number of
			miles driven and store it in a variable called <title_reference>miles</title_reference> and the number of gallons used stored in a variable <title_reference>gallons</title_reference>.
			Print a nice message with the answer.
		</p>
	</statement>


	<program label="ex_2_12_editor" interactive="activecode" language="python">
		<input>
		</input>
		<tests>
		from unittest.gui import TestCaseGui
		import re
		class myTests(TestCaseGui):
		def testOne(self):
		self.assertTrue(re.search(str(miles/gallons)[:5], self.getOutput()), 'Checking answer.')
		myTests().main()
		</tests>
	</program>
</exercise>

<exercise xml:id="chapter2_ex6">
	<statement>
		<p>
			Challenge: Write a program that will convert degrees celsius to degrees fahrenheit.
		</p>
	</statement>
    <program interactive="activecode" language="python" xml:id="chapter2_ac5">
	<prefix>
	</prefix>
	<input>
	</input>
	<tests>
	</tests>
</program>
<solution>
<program language="python">
	<input>
## question 13 solution ##
deg_c = int(input("What is the temperature in Celsius? "))
# formula to convert C to F is: (degrees Celcius) times (9/5) plus (32)
deg_f = deg_c * (9 / 5) + 32
print(deg_c, " degrees Celsius is", deg_f, " degrees Farenheit.")
	</input>
	<tests>
	</tests>
</program>
</solution>
</exercise>

<exercise label="ex_2_14">
	<statement>
		<p>
			Ask the user for the temperature in Fahrenheit and store it in a variable call <c>deg_f</c>.
			Calculate the equivalent temperature in degrees Celsius and store it in <c>deg_c</c>.
			Output a message to the user giving the temperature in Celsius.
		</p>
	</statement>


	<program label="ex_2_14_editor" interactive="activecode" language="python">
		<input>
		</input>
		<tests>
		from unittest.gui import TestCaseGui
		class myTests(TestCaseGui):
		def testOne(self):
		self.assertIn('deg_f', self.getEditorText())
		self.assertIn('deg_c', self.getEditorText())
		ans = (deg_f - 32)*5/9
		self.assertAlmostEqual(ans, deg_c)
		self.assertIn(str(ans)[:min(len(str(ans)), 5)],    self.getOutput(), 'Checking answer.')
		myTests().main()
		</tests>
	</program>
</exercise>

<exercise label="pp_2_15" indentation="show" language="python">
	<statement>
		<p>
			Piece together the code so that a user is asked for two numbers, and then the sum of those two numbers is printed out.
		</p>
	</statement>
	<blocks><block order="3">
	<cline>num_one = input("Please enter your first number: ")</cline>
	</block><block order="4">
	<cline>num_two = input("Please enter your second number: ")</cline>
	</block><block order="1">
	<cline>sum_of_input = int(num_one) + int(num_two)</cline>
	</block><block order="2">
	<cline>print(sum_of_input)</cline>
	</block></blocks>
</exercise>

<exercise label="pp_2_16" indentation="show" language="python">
	<statement>
		<p>
			Write a program that will convert gallons to liters.
			This program will also need to get input from a user to see how many gallons should be converted and the result should be printed to the user.
		</p>
	</statement>
	<blocks><block order="2">
	<cline>user_gallons = input("How many gallons should be converted?: ")</cline>
	</block><block order="4">
	<cline>num_gallons = int(user_gallons)</cline>
	</block><block order="1">
	<cline>liters = num_gallons * 3.785</cline>
	</block><block order="3">
	<cline>print("Number of liters: " + str(liters))</cline>
	</block></blocks>
</exercise>

<exercise label="pp_2_17" indentation="show" language="python">
	<statement>
		<p>
			Write a program that will convert tablespoons to teaspoons.
			This program will also need to get input from a user to see how many tablespoons should be converted and the result should be printed to the user.
		</p>
	</statement>
	<blocks><block order="1">
	<cline>user_tablespoons = float(input("How many tablespoons should be converted?: "))</cline>
	</block><block order="2">
	<cline>teaspoons = user_tablespoons * 3</cline>
	</block><block order="3">
	<cline>print("Number of teaspoons: " + str(teaspoons))</cline>
	</block></blocks>
</exercise>
</section>
